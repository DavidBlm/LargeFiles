package ba.intersection;
import ba.util.SingleSetCompareMatrix;
//TODO: x = (n-1)n/2
//TODO: m1 = m - 1, m2 = m1(m1+1)/2
component IntersectionController<N1 n = 2,N1 x = 1,N1 m = 5,N1 m1 = 4,N1 m2 = 10>{
//component IntersectionController{
    ports in Q^{3,m} trajectoryIn[n],
          in Q(0m : 10m) cutoffTime,
          in B isActive,
          out B stop[n];

    instance SingleSetCompareMatrix<3,m,n,x> singleSetCompare;
    instance TrajectoryCompare<m,m1,m2> trajectoryCompare[x];
    instance ConflictToStopConverter<n,x,m> conflictToStopConverter;

    connect trajectoryIn[:] -> singleSetCompare.setIn[:];
    connect singleSetCompare.listOut1[:] -> trajectoryCompare[:].trajectory1;
    connect singleSetCompare.listOut2[:] -> trajectoryCompare[:].trajectory2;

    connect cutoffTime -> trajectoryCompare[:].cutoffTime;
    connect trajectoryCompare[:].conflict -> conflictToStopConverter.conflictIn[:];

    connect isActive -> conflictToStopConverter.active;
    connect conflictToStopConverter.stopOut[:] ->  stop[:];
}