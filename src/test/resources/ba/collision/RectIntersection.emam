package ba.collision;
import ba.util.DualSetCompareMatrix;
import ba.util.LineIntersection;
import ba.util.MultiOr;
import ba.struct.Rectangle;

component RectIntersection{
    ports in Rectangle rect1,
          in Rectangle rect2,
          out B collision;

    //check intersection of 4*4 lines w/o permutations
    //4*(4+1)/2 = 10 possibilities

    instance RectToLines rectToLines1;
    instance RectToLines rectToLines2;

    instance DualSetCompareMatrix<2,4,4,10> dualSetCompare;

    instance LineIntersection lineIntersection[10];
    instance MultiOr<10> multiOr;

    connect rect1 -> rectToLines1.rect;
    connect rect2 -> rectToLines2.rect;

    connect rectToLines1.lines[:] -> dualSetCompare.setInA[:];
    connect rectToLines2.lines[:] -> dualSetCompare.setInB[:];

    connect dualSetCompare.outA[:] -> lineIntersection[:].lineA;
    connect dualSetCompare.outB[:] -> lineIntersection[:].lineB;

    connect lineIntersection[:].intersects -> multiOr.boolIn[:];
    connect multiOr.boolOut -> collision;
}