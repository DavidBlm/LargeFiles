package ba;
import ba.intersection.IntersectionController;
import ba.util.RelToAbsTrajectory;
import ba.util.CommQuality;
import ba.vehicle.VelocityController;
//component System<N1 n = 2,N1 x = 1,N1 m = 5,N1 m1 = 4,N1 m2 = 10>{
component System{
    //Intersection
    instance IntersectionController intersectionController;
    ports in Q cutoffTimeIn,
          in B isActiveIn,
          in Q^{3,5} absTrajectory[2];

    connect cutoffTimeIn -> intersectionController.cutoffTime;
    connect isActiveIn -> intersectionController.isActive;
    connect absTrajectory[:] -> intersectionController.trajectoryIn[:];

    //Collision detection
    instance CollisionDetection collisionDetection;

    ports in Q^{2,4} hullsIn[2],
          out B collisionOut;

    connect hullsIn[:] -> collisionDetection.hulls[:];
    connect collisionDetection.collision -> collisionOut;

    //Vehicles
    instance VelocityController velocityController[2];

    ports in Q maxAccel[2],
          in Q maxVel[2],
          in Q deltaTime[2],
          in Q holdTime[2],
          in B resetVel[2],
          in B slowDown[2],
          out Q curVel[2];

    connect maxAccel[:] -> velocityController[:].maxAccelIn;
    connect maxVel[:] -> velocityController[:].maxVelIn;
    connect deltaTime[:] -> velocityController[:].deltaTimeIn;
    connect holdTime[:] -> velocityController[:].holdTimeIn;
    connect resetVel[:] -> velocityController[:].resetVelIn;
    connect velocityController[:].curVelOut -> curVel[:];

    instance CommQuality<B> stopCommQuality[2];
    connect intersectionController.stop[:] -> stopCommQuality[:].in1;
    connect stopCommQuality[:].out1 -> velocityController[:].slowDownIn;

    //connect intersectionController.stop[:] -> velocityController[:].slowDownIn;


}